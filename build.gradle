plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_build_num}"
group = project.maven_group

loom {
//    accessWidenerPath = file("src/main/resources/yungsapi.aw")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings minecraft.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation 'com.google.code.gson:gson:2.8.6'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
    it.options.encoding = "UTF-8"

}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.=
    withSourcesJar() // If you remove this line, sources will not be generated.
    withJavadocJar() // Javadoc jar is needed for Maven Central
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications  {
        mavenJava(MavenPublication) {
            artifactId = "YungsApi"
            // We avoid using 'from components.java', and instead specify artifacts individually,
            // Since we want to use the output of remapJar rather than the regular jar
            artifact(remapJar) { builtBy remapJar }
            artifact(sourcesJar) { builtBy remapSourcesJar }
            artifact(javadocJar) { builtBy javadocJar }
            pom {
                name = "YUNG's API"
                description = "A common API for YUNG's Minecraft mods"
                url = 'https://github.com/yungnickyoung/YUNGs-Api'
                scm {
                    url = 'https://github.com/yungnickyoung/YUNGs-Api'
                    connection = 'scm:git:git://github.com/yungnickyoung/YUNGs-Api.git'
                    developerConnection = 'scm:git:ssh://git@github.com:yungnickyoung/YUNGs-Api.git'
                }
                licenses {
                    license {
                        name = 'GNU GPLv3'
                        url = 'https://github.com/yungnickyoung/YUNGs-Api/blob/fabric-1.17/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        name = 'YUNGNICKYOUNG'
                        email = 'yungnickyoung@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

// signing.keyId, signing.password, and signing.secretKeyRingFile are defined separately
// in my global gradle.properties for protection
signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}